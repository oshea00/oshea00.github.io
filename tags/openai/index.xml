<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Openai on MikesBlog</title>
    <link>https://oshea00.github.io/tags/openai/</link>
    <description>Recent content in Openai on MikesBlog</description>
    <generator>Hugo -- 0.136.5</generator>
    <language>en</language>
    <lastBuildDate>Sat, 02 Nov 2024 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://oshea00.github.io/tags/openai/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Classify With Confidence</title>
      <link>https://oshea00.github.io/posts/classify-with-confidence/</link>
      <pubDate>Sat, 02 Nov 2024 00:00:00 +0000</pubDate>
      <guid>https://oshea00.github.io/posts/classify-with-confidence/</guid>
      <description>&lt;p&gt;&lt;figure class=&#34;align-center &#34;&gt;
    &lt;img loading=&#34;lazy&#34; src=&#34;images/cutepredictioncartoon.png#center&#34;/&gt; 
&lt;/figure&gt;

Large foundation models like GPT can classify text according to a well-crafted prompt instruction, and it&amp;rsquo;s remarkable how well they can do this, considering there has been no explicit training with labeled datasets. This has traditionally been done using machine learning models and logistic regression techniques.&lt;/p&gt;
&lt;p&gt;However, with generative model classification, we lose the &amp;lsquo;confidence level&amp;rsquo; or the probability score of the prediction available in logistic regression. Traditional models like logistic regression provide a probability score for each class, indicating the model&amp;rsquo;s confidence level in its predictions. This confidence score is not just valuable; it&amp;rsquo;s essential for decision-making, as it helps users gauge how confident the model is about its classifications. While generative model responses may align well with the intended classification, we don&amp;rsquo;t directly get an explicit probability for each class. This can be a limitation, particularly in high-stakes applications where knowing the model&amp;rsquo;s confidence level is crucial.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Comparing Prompt Results - A Rose By Any Other Name</title>
      <link>https://oshea00.github.io/posts/a-rose-by-any-other-name/</link>
      <pubDate>Tue, 20 Aug 2024 00:00:00 +0000</pubDate>
      <guid>https://oshea00.github.io/posts/a-rose-by-any-other-name/</guid>
      <description>&lt;p&gt;&lt;figure class=&#34;align-center &#34;&gt;
    &lt;img loading=&#34;lazy&#34; src=&#34;images/androidrose.png#center&#34;/&gt; 
&lt;/figure&gt;

You might want to test an expected response from a prompt sent to a large language model, but string comparisons will not help you. The inherent variability in large language model (LLM) responses will require you to find new ways to compare generated prompt results.&lt;/p&gt;
&lt;p&gt;There are a few reasons why a generated prompt result will not exactly match a prior result: the prompt itself may have changed, the model parameters may have changed, or the model&amp;rsquo;s inherent variability may inject a small amount of change in the results.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Scaling OpenAI With AsyncOpenAI</title>
      <link>https://oshea00.github.io/posts/async-openai/</link>
      <pubDate>Sun, 07 Jul 2024 00:00:00 +0000</pubDate>
      <guid>https://oshea00.github.io/posts/async-openai/</guid>
      <description>&lt;p&gt;As I stood outside and looked at the neighborhood wasteland that post-July 4th left behind, the whiff of gunpowder still hanging in the air, I felt a burst of good neighbor energy flow through me, so I grabbed a broom. Sweeping up the street gave me time to think about the other chores I had for the day, including the writing of a new blog post, and I began to wonder how I could use ChatGPT to help me speed some things up.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
