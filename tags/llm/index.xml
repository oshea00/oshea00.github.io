<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Llm on MikesBlog</title>
    <link>https://oshea00.github.io/tags/llm/</link>
    <description>Recent content in Llm on MikesBlog</description>
    <generator>Hugo -- 0.150.1</generator>
    <language>en</language>
    <lastBuildDate>Mon, 29 Sep 2025 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://oshea00.github.io/tags/llm/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>AI Cloud Interactive Hype Cycle 2025</title>
      <link>https://oshea00.github.io/posts/interactive-hype-cycle/</link>
      <pubDate>Mon, 29 Sep 2025 00:00:00 +0000</pubDate>
      <guid>https://oshea00.github.io/posts/interactive-hype-cycle/</guid>
      <description>&lt;html lang=&#34;en&#34;&gt;
&lt;head&gt;
    &lt;meta charset=&#34;UTF-8&#34;&gt;
    &lt;meta name=&#34;viewport&#34; content=&#34;width=device-width, initial-scale=1.0&#34;&gt;
    &lt;style&gt;
         
        #hype-cycle-widget {
            font-family: -apple-system, BlinkMacSystemFont, &#39;Segoe UI&#39;, Roboto, sans-serif;
            background: white;
            width: 100%;
            max-width: 1400px;
            margin: 0 auto;
        }

        #hype-cycle-widget * {
            box-sizing: border-box;
        }

        #hype-cycle-widget .hype-container {
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(10px);
            border-radius: 0;
            box-shadow: 0 20px 40px rgba(0, 0, 0, 0.1);
            overflow: hidden;
        }

        #hype-cycle-widget .hype-header {
            background: linear-gradient(135deg, #2c3e50 0%, #34495e 100%);
            color: white;
            padding: 30px;
            text-align: center;
        }

        #hype-cycle-widget .hype-header h1 {
            font-size: 2.5rem;
            font-weight: 700;
            margin-bottom: 10px;
            text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.3);
        }

        #hype-cycle-widget .hype-header p {
            font-size: 1.1rem;
            opacity: 0.9;
            margin: 5px 0;
        }

        #hype-cycle-widget .hype-main-content {
            display: flex;
            flex-direction: column;
            gap: 30px;
            padding: 30px;
        }

        #hype-cycle-widget .hype-chart-section {
            background: white;
            border-radius: 15px;
            padding: 20px;
            box-shadow: 0 10px 25px rgba(0, 0, 0, 0.1);
            position: relative;
        }

        #hype-cycle-widget .hype-chart-container {
            position: relative;
            width: 100%;
            height: 500px;
            background: #f8f9fa;
            border-radius: 10px;
            overflow: hidden;
        }

        #hype-cycle-widget .hype-curve {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            pointer-events: none;
        }

        #hype-cycle-widget .hype-table-section {
            background: white;
            border-radius: 15px;
            padding: 20px;
            box-shadow: 0 10px 25px rgba(0, 0, 0, 0.1);
        }

        #hype-cycle-widget .hype-controls {
            display: flex;
            gap: 15px;
            margin-bottom: 20px;
            flex-wrap: wrap;
        }

        #hype-cycle-widget .hype-search-box,
        #hype-cycle-widget .hype-filter-select {
            padding: 12px 16px;
            border: 2px solid #e1e5e9;
            border-radius: 10px;
            font-size: 14px;
            transition: all 0.3s ease;
            background: white;
        }

        #hype-cycle-widget .hype-search-box:focus,
        #hype-cycle-widget .hype-filter-select:focus {
            outline: none;
            border-color: #667eea;
            box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);
        }

        #hype-cycle-widget .hype-search-box {
            flex: 1;
            min-width: 200px;
        }

        #hype-cycle-widget .hype-filter-select {
            min-width: 150px;
        }

        #hype-cycle-widget .hype-table-container {
            overflow: auto;
            max-height: 400px;
            border-radius: 10px;
            border: 1px solid #e1e5e9;
        }

        #hype-cycle-widget table {
            width: 100%;
            border-collapse: collapse;
            background: white;
        }

        #hype-cycle-widget th {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            padding: 15px 12px;
            text-align: left;
            font-weight: 600;
            cursor: pointer;
            position: sticky;
            top: 0;
            z-index: 10;
            transition: all 0.2s ease;
        }

        #hype-cycle-widget th:hover {
            background: linear-gradient(135deg, #5a6fd8 0%, #6a4190 100%);
        }

        #hype-cycle-widget td {
            padding: 12px;
            border-bottom: 1px solid #e1e5e9;
            vertical-align: top;
        }

        #hype-cycle-widget tr:hover {
            background: #f8f9ff;
        }

        #hype-cycle-widget .tech-name {
            font-weight: 600;
            color: #2c3e50;
        }

        #hype-cycle-widget .position {
            font-weight: 500;
            padding: 4px 8px;
            border-radius: 6px;
            font-size: 0.9rem;
        }

        #hype-cycle-widget .innovation-trigger { background: #e8f5e8; color: #2d5a2d; }
        #hype-cycle-widget .peak-expectations { background: #fff3cd; color: #856404; }
        #hype-cycle-widget .trough-disillusionment { background: #f8d7da; color: #721c24; }
        #hype-cycle-widget .slope-enlightenment { background: #d4edda; color: #155724; }
        #hype-cycle-widget .plateau-productivity { background: #d1ecf1; color: #0c5460; }

        #hype-cycle-widget .time-badge {
            display: inline-block;
            padding: 4px 8px;
            border-radius: 12px;
            font-size: 0.8rem;
            font-weight: 500;
        }

        #hype-cycle-widget .time-lt2 { background: #e3f2fd; color: #1565c0; }
        #hype-cycle-widget .time-2-5 { background: #e8f5e8; color: #2e7d32; }
        #hype-cycle-widget .time-5-10 { background: #fff3e0; color: #ef6c00; }
        #hype-cycle-widget .time-gt10 { background: #fce4ec; color: #c2185b; }
        #hype-cycle-widget .time-obsolete { background: #f3e5f5; color: #7b1fa2; }

        #hype-cycle-widget .analysis-cell {
            max-width: 300px;
            line-height: 1.4;
            font-size: 0.9rem;
        }

        #hype-cycle-widget .hype-tooltip {
            position: absolute;
            background: rgba(0, 0, 0, 0.9);
            color: white;
            padding: 12px 16px;
            border-radius: 8px;
            font-size: 14px;
            max-width: 300px;
            z-index: 1000;
            opacity: 0;
            transition: opacity 0.3s ease;
            pointer-events: none;
            box-shadow: 0 8px 25px rgba(0, 0, 0, 0.3);
        }

        #hype-cycle-widget .hype-tooltip.show {
            opacity: 1;
        }

        #hype-cycle-widget .tech-dot {
            position: absolute;
            width: 12px;
            height: 12px;
            border-radius: 50%;
            cursor: pointer;
            transition: all 0.2s ease;
            z-index: 5;
        }

        #hype-cycle-widget .tech-dot:hover {
            transform: scale(1.5);
            z-index: 6;
        }

        #hype-cycle-widget .tech-dot.innovation-trigger { background: #4caf50; }
        #hype-cycle-widget .tech-dot.peak-expectations { background: #ff9800; }
        #hype-cycle-widget .tech-dot.trough-disillusionment { background: #f44336; }
        #hype-cycle-widget .tech-dot.slope-enlightenment { background: #2196f3; }
        #hype-cycle-widget .tech-dot.plateau-productivity { background: #9c27b0; }

        #hype-cycle-widget .sort-icon {
            display: inline-block;
            margin-left: 5px;
            opacity: 0.5;
        }

        @media (max-width: 768px) {
            #hype-cycle-widget .hype-header h1 {
                font-size: 1.8rem;
            }
            
            #hype-cycle-widget .hype-controls {
                flex-direction: column;
            }
            
            #hype-cycle-widget .hype-search-box,
            #hype-cycle-widget .hype-filter-select {
                width: 100%;
            }
        }
    &lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;
    
    &lt;div id=&#34;hype-cycle-widget&#34;&gt;
        &lt;div class=&#34;hype-container&#34;&gt;
            &lt;div class=&#34;hype-header&#34;&gt;
                &lt;p style=&#34;font-size: 1rem; opacity: 0.8; margin-top: 10px;&#34;&gt;Based on Gartner Hype Cycle for Cloud Platform Services, 2025&lt;/p&gt;</description>
    </item>
    <item>
      <title>Model Context Protocol (MCP) Best Practices</title>
      <link>https://oshea00.github.io/posts/mcp-practices/</link>
      <pubDate>Mon, 29 Sep 2025 00:00:00 +0000</pubDate>
      <guid>https://oshea00.github.io/posts/mcp-practices/</guid>
      <description>&lt;figure class=&#34;align-center &#34;&gt;
    &lt;img loading=&#34;lazy&#34; src=&#34;images/cuteMCP.png#center&#34;/&gt; 
&lt;/figure&gt;

&lt;p&gt;&lt;em&gt;As we integrate services and data APIs into agentic AI solutions, interest is growing in how the Model Context Protocol (MCP) can standardize the way tools expose their capabilities to agents. With that in mind, I’ve assembled—yes, with the help of AI—a survey of key topics and resources related to MCP.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;MCP is an &lt;strong&gt;open standard&lt;/strong&gt; (launched by Anthropic in Nov 2024) for exposing data sources, tools, and “resources” to AI agents via a uniform interface.
It is designed to replace the ad-hoc “one-off connector per tool/agent” pattern, simplifying how LLM-based agents integrate with live systems. [1]&lt;/p&gt;</description>
    </item>
    <item>
      <title>A2A Doesn&#39;t need AI Agents</title>
      <link>https://oshea00.github.io/posts/a2a-thoughts/</link>
      <pubDate>Sun, 28 Sep 2025 00:00:00 +0000</pubDate>
      <guid>https://oshea00.github.io/posts/a2a-thoughts/</guid>
      <description>&lt;figure class=&#34;align-center &#34;&gt;
    &lt;img loading=&#34;lazy&#34; src=&#34;images/cutecomputeragentstalking.png#center&#34;/&gt; 
&lt;/figure&gt;

&lt;p&gt;&lt;em&gt;Is this just distributed computing re-packaged for AI?&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&#34;what-is-a2a-without-ai-agents&#34;&gt;What is A2A Without AI Agents?&lt;/h2&gt;
&lt;p&gt;I got into a debate with Gemini recently about Agent-To-Agent protocol (A2A). I said I thought it was a retread of existing distributed computing technologies like Service Discovery, Mesh, CORBA, etc. Perhaps Gemini took it personally, as Google (Gemini&amp;rsquo;s Creator) had &lt;a href=&#34;https://developers.googleblog.com/en/a2a-a-new-era-of-agent-interoperability/&#34;&gt;announced A2A in April&lt;/a&gt;, and Gemini got a little &amp;ldquo;gushy&amp;rdquo; on how it was &amp;ldquo;a revolutionary new idea.&amp;rdquo; Also, perhaps &amp;ldquo;debate&amp;rdquo; is too strong a word. And I might want to consider getting out more often.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Building a Hybrid Summary Evaluation Framework</title>
      <link>https://oshea00.github.io/posts/summary-evals/</link>
      <pubDate>Sun, 14 Sep 2025 00:00:00 +0000</pubDate>
      <guid>https://oshea00.github.io/posts/summary-evals/</guid>
      <description>&lt;p&gt;&lt;figure class=&#34;align-center &#34;&gt;
    &lt;img loading=&#34;lazy&#34; src=&#34;images/cutecomputereditor.png#center&#34;/&gt; 
&lt;/figure&gt;

&lt;em&gt;Combining deterministic NLP with LLM-as-Judge for robust evaluation&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&#34;summary-evaluation-challenges&#34;&gt;Summary Evaluation Challenges&lt;/h2&gt;
&lt;p&gt;Summary evaluation metrics sometimes fall short in capturing the qualities most relevant to assessing summary quality. Traditional machine learning for natural language processing (NLP)
has covered a lot of ground in this area. Widely used measures such as ROUGE focus on surface-level token overlap and n-gram matches. While effective for evaluating lexical similarity, these approaches offer limited insight into aspects such as factual accuracy or semantic completeness [1].&lt;/p&gt;</description>
    </item>
    <item>
      <title>LLMs At The Command Line - Part 1</title>
      <link>https://oshea00.github.io/posts/aichat-part1/</link>
      <pubDate>Sat, 18 Jan 2025 00:00:00 +0000</pubDate>
      <guid>https://oshea00.github.io/posts/aichat-part1/</guid>
      <description>&lt;figure class=&#34;align-center &#34;&gt;
    &lt;img loading=&#34;lazy&#34; src=&#34;images/cartoon_terminal.png#center&#34;/&gt; 
&lt;/figure&gt;

&lt;p&gt;If you are a command-line fan and want to experiment with large language models (LLM), you will love &lt;a href=&#34;https://github.com/sigoden/aichat&#34;&gt;&lt;code&gt;AiChat&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;There are many popular graphical front ends for working with LLMs, such as OpenAI&amp;rsquo;s ChatGPT, and Anthropic&amp;rsquo;s Claude, but get ready for this little powerhouse for CLI lovers as it has many advanced and useful features.&lt;/p&gt;
&lt;p&gt;One such feature is an easy-to-use, out-of-the-box RAG feature (Retrieval Augmented Generation) useful for searching existing content. I&amp;rsquo;ve put together a small demo here that shows how easy it can be to use in a pinch. There are many use cases where such an approach is just the right size.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Classify With Confidence</title>
      <link>https://oshea00.github.io/posts/classify-with-confidence/</link>
      <pubDate>Sat, 02 Nov 2024 00:00:00 +0000</pubDate>
      <guid>https://oshea00.github.io/posts/classify-with-confidence/</guid>
      <description>&lt;p&gt;&lt;figure class=&#34;align-center &#34;&gt;
    &lt;img loading=&#34;lazy&#34; src=&#34;images/cutepredictioncartoon.png#center&#34;/&gt; 
&lt;/figure&gt;

Large foundation models like GPT can classify text according to a well-crafted prompt instruction, and it&amp;rsquo;s remarkable how well they can do this, considering there has been no explicit training with labeled datasets. This has traditionally been done using machine learning models and logistic regression techniques.&lt;/p&gt;
&lt;p&gt;However, with generative model classification, we lose the &amp;lsquo;confidence level&amp;rsquo; or the probability score of the prediction available in logistic regression. Traditional models like logistic regression provide a probability score for each class, indicating the model&amp;rsquo;s confidence level in its predictions. This confidence score is not just valuable; it&amp;rsquo;s essential for decision-making, as it helps users gauge how confident the model is about its classifications. While generative model responses may align well with the intended classification, we don&amp;rsquo;t directly get an explicit probability for each class. This can be a limitation, particularly in high-stakes applications where knowing the model&amp;rsquo;s confidence level is crucial.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Comparing Prompt Results - A Rose By Any Other Name</title>
      <link>https://oshea00.github.io/posts/a-rose-by-any-other-name/</link>
      <pubDate>Tue, 20 Aug 2024 00:00:00 +0000</pubDate>
      <guid>https://oshea00.github.io/posts/a-rose-by-any-other-name/</guid>
      <description>&lt;p&gt;&lt;figure class=&#34;align-center &#34;&gt;
    &lt;img loading=&#34;lazy&#34; src=&#34;images/androidrose.png#center&#34;/&gt; 
&lt;/figure&gt;

You might want to test an expected response from a prompt sent to a large language model, but string comparisons will not help you. The inherent variability in large language model (LLM) responses will require you to find new ways to compare generated prompt results.&lt;/p&gt;
&lt;p&gt;There are a few reasons why a generated prompt result will not exactly match a prior result: the prompt itself may have changed, the model parameters may have changed, or the model&amp;rsquo;s inherent variability may inject a small amount of change in the results.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Scaling OpenAI With AsyncOpenAI</title>
      <link>https://oshea00.github.io/posts/async-openai/</link>
      <pubDate>Sun, 07 Jul 2024 00:00:00 +0000</pubDate>
      <guid>https://oshea00.github.io/posts/async-openai/</guid>
      <description>&lt;p&gt;As I stood outside and looked at the neighborhood wasteland that post-July 4th left behind, the whiff of gunpowder still hanging in the air, I felt a burst of good neighbor energy flow through me, so I grabbed a broom. Sweeping up the street gave me time to think about the other chores I had for the day, including the writing of a new blog post, and I began to wonder how I could use ChatGPT to help me speed some things up.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Transformers -  Positional Encoding</title>
      <link>https://oshea00.github.io/posts/transformers-positional-encoding/</link>
      <pubDate>Mon, 27 May 2024 00:00:00 +0000</pubDate>
      <guid>https://oshea00.github.io/posts/transformers-positional-encoding/</guid>
      <description>&lt;p&gt;Since transformer input is processed in parallel rather than serially, it is necessary to encode the relative positions of the input sequence of tokens in some way. The positional encoding in the transformer model uses sinusoidal functions to create a unique encoding for each position.&lt;/p&gt;
&lt;p&gt;In working through the article on Transformers, as described in the original paper &lt;a href=&#34;https://arxiv.org/pdf/1706.03762&#34;&gt;&amp;ldquo;Attention is All You Need&amp;rdquo; by Vaswani et al.&lt;/a&gt;, the following formulas are used to encode the PE tensor values:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Fine-tuning Llama3</title>
      <link>https://oshea00.github.io/posts/finetuning-llama3-8b/</link>
      <pubDate>Sat, 11 May 2024 00:00:00 +0000</pubDate>
      <guid>https://oshea00.github.io/posts/finetuning-llama3-8b/</guid>
      <description>&lt;p&gt;Since Llama3 was released, the &lt;a href=&#34;https://pytorch.org/torchtune/stable/tutorials/llama3.html&#34;&gt;PyTorch llama3&lt;/a&gt; documentation has a few glitches pointing at configurations in torchtune that are still referencing Llama2. &lt;a href=&#34;https://llama.meta.com/docs/how-to-guides/fine-tuning/&#34;&gt;The meta website&lt;/a&gt; is a little more up-to-date, but the documentation is a little light on details. So, I
wrote this article to bring everything together.&lt;/p&gt;
&lt;h2 id=&#34;prerequisites&#34;&gt;Prerequisites&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;You&amp;rsquo;ll want to use Python 3.11 &lt;a href=&#34;https://github.com/pytorch/pytorch/issues/120233&#34;&gt;until Torch compile supports Python 3.12&lt;/a&gt; , and I recommend setting up a virtual environment for this using &lt;code&gt;venv&lt;/code&gt; or &lt;code&gt;pipenv&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Install &lt;a href=&#34;https://pytorch.org/torchtune/stable/install.html#install-label&#34;&gt;torchtune&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;pip install torchtune
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;Install &lt;a href=&#34;https://github.com/EleutherAI/lm-evaluation-harness&#34;&gt;EleutherAI&amp;rsquo;s Evaluation Harness&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;pip install lm_eval&lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;0.4.*
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;download-llama3-8b-model&#34;&gt;Download Llama3-8B model&lt;/h2&gt;
&lt;p&gt;You will need to get access to Llama3 via instructions on the &lt;a href=&#34;https://github.com/meta-llama/llama3/blob/main/README.md&#34;&gt;official Meta Llama3&lt;/a&gt; page. You will also need your Hugging Face token setup from &lt;a href=&#34;https://huggingface.co/settings/tokens&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>OpenAI Python API Compatibility</title>
      <link>https://oshea00.github.io/posts/openai-compatible-apis/</link>
      <pubDate>Thu, 09 May 2024 00:00:00 +0000</pubDate>
      <guid>https://oshea00.github.io/posts/openai-compatible-apis/</guid>
      <description>&lt;p&gt;An increasing number of open-sourced generative AI large language models (LLM) are being hosted behind an OpenAI API-compatible endpoint or have tools that offer an OpenAI API. The Python library for accessing OpenAI is just a REST client, and the library provides a way to specify the URL and an API key, as well as the model being offered by the provider.&lt;/p&gt;
&lt;p&gt;Here are a few examples of how the OpenAI library is used with other open-source models.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
